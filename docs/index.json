[{"categories":null,"content":"关于我\r\r一条心系电影的IT🐶 一位无人关注的快门工 \r\r ","date":"2021-01-31","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":["生活多美好"],"content":" 国庆因为台风的原因，归家的航班最终还是取消无补。这么一个难得的小长假绝对不容浪费，于是我用了一个上午制定了假期的b计划。 ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:0:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":"1 第一站是南京，之前一直有想法领略古都风采，此次也算抓住了一个很好地机会。 到达南京的时候已是黄昏时分，由于在南站落车，距离较为靠近市中心的首个景点就是雨花台。 雨花台在我的意识里，最熟悉的应该是南京保卫战，作为南京城外的扼要阵地，雨花台战役异常惨烈，因此我也误认为烈士陵园是为此而建的。其实在抗战前至建国，我党人士有很多被反动派屠杀于此，因此这里也自然成为了重要的革命教育圣地。 烈士陵园01 \"\r烈士陵园\r 烈士陵园02 \"\r烈士陵园\r 烈士陵园03 \"\r烈士陵园\r 雨花台倒影池04 \"\r雨花台倒影池\r 离开雨花台的时候，天已经全黑了，但是还陆续有旅游团靠着手机的灯光来参观。 住的地方选在了玄武门附近，从景点的方便程度和价格综合考虑，还是比较合适的。 安排好住处，去附近的狮子桥吃了一份正宗的有“鸭肝”的鸭血粉丝汤。此梗来自一次偶然，一位上海老大爷因为鸭血粉丝没有鸭肝，酒后和店家纠缠不休，由此我脑子里印下了这个概念。 狮子桥05 \"\r狮子桥\r 鸭血粉丝06 \"\r鸭血粉丝\r 不得不说南方人很会吃鸭子，盐水鸭、酱鸭、鸭血粉丝、各种卤鸭货，完全没有我们摒弃的腥味，即使是一个不喜欢吃鸭肉的人，也会爱上。 第一天的夜景选在新街口，只因为它是离我最近的。南京的几个重要景点都比较集中，距离也不超过10公里，我本着“能坐地面交通工具就放弃地铁”的原则，选择了单车。 南京的自行车道多是这样的，小心碰头07 \"\r南京的自行车道多是这样的，小心碰头\r 新街口总的来说没什么值得逛的，只不过是个现代化的商圈，如果不是购物为目的可以忽略。 苏宁08 \"\r苏宁\r 街头艺人09 \"\r街头艺人\r 中央商场10 \"\r中央商场\r 街碑11 \"\r街碑\r ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:1:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":"2 第二天的早饭在一条巷子里的一个小汤包馆解决，店面不起眼但是人很多，我想都是和我一样被推荐来的。小店是一对夫妇经营，老板娘外向能干，负责记单和上菜，老板内向沉稳，负责收钱和收台。 早饭很简单，一笼汤包和一碗白粥，加上老板自制的一碟小菜。价格和一些大店差不多，但是味道绝对不输，还是值得一吃的。 汤包12 \"\r汤包\r 从巷子出来再有一公里左右就到鼓楼公园了，前一天晚上骑车路过但是早已关门。公园很小，只是围着老鼓楼建了一圈围墙和一圈石子健步路，鼓楼就在中心的高坡上，外表红漆很亮，只不过里面已没有任何内容，人们完全就是为了来打卡拍照的（多数是老年人）。 鼓楼13 \"\r鼓楼\r 知道鸡鸣寺也是个偶然，在嘉兴伍相祠拍的一张照片被朋友误认为是鸡鸣寺，后来得知这两处可以拍出相似的景观，这次顺便来眼见为实。 南京鸡鸣寺14 \"\r南京鸡鸣寺\r 嘉兴伍相祠15 \"\r嘉兴伍相祠\r 鸡鸣寺的做法相比其他景点较为聪明，这次假期买门票免费赠送三柱香，进入景区就指引人们到山顶上香。虽然人很多，但拿着香到处走毕竟不方便，索性直接上山顶，于是人流也就变的有序了很多。 鸡鸣寺16 \"\r鸡鸣寺\r 鸡鸣寺17 \"\r鸡鸣寺\r 鸡鸣寺18 \"\r鸡鸣寺\r 鸡鸣寺19 \"\r鸡鸣寺\r 总统府的计划在看到堵满了整条街的人流后放弃了，旁边的1，912老街区也沦为了各种餐馆和酒吧的天地，让我印象深刻的只有那列袖珍的游览蒸汽机车。 总统府20 \"\r总统府\r 总统府21 \"\r总统府\r 1912街区22 \"\r1912街区\r 1912街区23 \"\r1912街区\r 下午及晚上的时间全部贡献给秦淮河和城墙，这一带的景点不多，但价格不低，在经历夫子庙的失望过后我便决定不再为附近其他景点消费。走马观花逛完了夫子庙周边，我便直奔南城墙而去。 夫子庙景区24 \"\r夫子庙景区\r 夫子庙景区25 \"\r夫子庙景区\r 夫子庙景区26 \"\r夫子庙景区\r 夫子庙景区27 \"\r夫子庙景区\r 南京的老城区也是比较破败的，可能一个古老的城市，还是应该最大可能保留它原有的模样吧。 我一直走到城东南角的雨花门才发现寻找登城口的路线是错的，但是没办法已经来到城外，只能硬着头皮往中华门走。 雨花门28 \"\r雨花门\r 城墙很高，貌似比之前看过的西安城墙还要高。我在城墙根发现了很多洞口，从字来看应该是解放后所建，这些人防工事的作用不言而喻，只不过把这些洞口设在城外，是方便了自己还是方便了敌人，我至今也没找到明确的答案。 城墙29 \"\r城墙\r 城墙30 \"\r城墙\r 城南段的城墙一共有五处登城口，中华门瓮城景点居多，吸引来的游客也是最多的。南京城墙历时30年完成，其过程难以想象。每块城墙砖都有制作地的官印，清理完成后可以清晰地看到调运的官员和制砖人的姓名。 中华门31 \"\r中华门\r 印有铭文的城砖32 \"\r印有铭文的城砖\r 从中华门走到集庆门用了近两个小时，很坑的是这一段人很少，相比另一侧没有自行车可以租，甚至所有的服务点都关了门，只能靠着双脚走到i下一个登城口。 内城墙下面就是整齐的旧民居，稍高一点的，我可以在城墙上和房顶的人平视。时间也不早了，从下面的烟囱里飘来了阵阵饭香，无法下城的我真有纵身一跃跳进巷子里的想法。 城墙33 \"\r城墙\r 城墙34 \"\r城墙\r 城根旧民居35 \"\r城根旧民居\r 城墙会一直开到晚上9点，但是中华门关闭较早。我下城时天已经黑了，之后找好了一家深藏居民区的锅贴店吃饭，牛肉锅贴配上一碗清淡的阳春面，劳累的身躯得到了些许满足。 锅贴阳春面36 \"\r锅贴阳春面\r 晚上逛老门东完全是撞上的，我的计划里并没有这个景点，可能是工作没有做充足。当然，几乎所有的老街都被网红店塞满，人流自然是不用说的，只不过走起来甚是乏味。 先锋书店37 \"\r先锋书店\r 老门东38 \"\r老门东\r 七进七出后，我找到了一条尚未被开发的巷子，除了没有人，它和其他巷子没有任何区别，但正因为这让它多了一份恐怖，这是我能找到的唯一惊喜。 无人巷39 \"\r无人巷\r 老宅40 \"\r老宅\r ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:2:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":"3 南京的最后一天，首先必须要去见识一下长江大桥，从市区走交通非常不方便，没有可以直达的公共交通，所以我依然选择老方法–单车。 从上桥到桥头堡还有一公里多的路，你可以选择步行或骑车。我这种中度恐高患者可能走起来有些艰难，桥是越走越高，风也越来越大，总有些站不住的感觉。 上桥41 \"\r上桥\r 上桥是有两种途径：一种是像我们直接走上来，另一种可以选择到大桥公园乘电梯上来。如果要上桥头堡，需要消费15元，包括了桥头堡和公园的票，可以下到公园离开。 雕像42 \"\r雕像\r 长江大桥算是里程碑意义的工程，可能只有那个年代能够建造出来，这里包含的不仅是汗水，更是那一代人的信念。 桥头堡43 \"\r桥头堡\r 留念44 \"\r留念\r 车流人流45 \"\r车流人流\r 桥头堡46 \"\r桥头堡\r 见识完了伟大工程，最后游览城北玄武湖。公园很大，因此人也比较散，相对来看清静了很多。城北一样需要门票登城，但是玄武门周围的城墙多数被高树遮挡，因此考虑到时间因素，弃之。 玄武门47 \"\r玄武门\r 玄武湖是很多文人骚客喜爱的地方，景点也多具备文人气息，赏花游湖，身心愉悦。 玄武湖公园48 \"\r玄武湖公园\r 玄武湖公园49 \"\r玄武湖公园\r 玄武湖公园50 \"\r玄武湖公园\r 玄武湖公园51 \"\r玄武湖公园\r 玄武湖公园52 \"\r玄武湖公园\r 晚上从南京乘高铁到达无锡，首先安排下住处。无锡的夜景貌似南长街是首选，虽然和其他老街风格相似，商业气息浓重，但难得来一次，卡还是要打的。 南长街53 \"\r南长街\r 南长街54 \"\r南长街\r ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:3:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":"4 来到无锡，三国水浒城是值得一游的，相比真正的老街，这里的气氛更接近古代，虽然全是人工建造。 为了避免排队拥挤，前一天晚上订购了拼团票，第二天可以直接进入。 景区位于太湖湖畔，依山傍水，特别适合搭建三国和水浒的场景。 乘坐公交，距离最近的水浒城还有两站地的时候，车已经开始排起了长队，此处走走停停，又是上坡路，司机坡起一脚油门让车里的人摔了一地。索性，下车。 景区外55 \"\r景区外\r 每到假期，这里肯定是车多位少，当地村民自然不会放过这赚钱的生意，不计其数的大爷大妈站在院前指挥车辆，面无表情但是眼睛里闪着金光。我无心打听价格，但车都进来了，自然是可以坐地起价。 指引停车56 \"\r指引停车\r 水浒城在北，三国城在南，如果是市区公交过来，完全可以先去水浒，后游三国，因为返程三国是公交起点。 水浒城57 \"\r水浒城\r 可能是人多地广的原因，景区的游客密度让我失望了，加上天气阴沉，景区的气氛变得异常凝重，我想着林教头山神庙的雪夜，奔上了梁山。 梁山58 \"\r梁山\r 爬上山顶，忠义堂和“替天行道”杏黄大旗（比电视剧里的小）矗立眼前。梁山本是绿林好汉的乌托邦，可到头来“忠义”变成了对天子忠，“替天行道”也变成了替天子行道，忠义之士沦为炮灰，可悲。 忠义堂59 \"\r忠义堂\r 山顶60 \"\r山顶\r 山下有阮氏三雄的石碣村、宋江提反诗的浔阳楼和醉打蒋门神的快活林，不过重点还是在唐高州和东京两座大城里。 石桥61 \"\r石桥\r 浔阳楼62 \"\r浔阳楼\r 两座城遥相呼应，中间一片沙场，沙场即战场，站在城楼上颇有指挥千军万马之感。 东京城63 \"\r东京城\r 高唐州64 \"\r高唐州\r 唐高州本是柴进关押之地，城门旁边便是牢房，气氛很到位，只是这牢门的柱子防不住小朋友的小身躯任意穿梭。 牢门65 \"\r牢门\r 牢房66 \"\r牢房\r 城里紫石街甚是热闹，吃喝玩乐，花天酒地。县衙门口摆着一圈长凳，一位老大爷手持铜锣叮叮当当，表演正式开始。 杂耍表演68 \"\r杂耍表演\r 杂耍表演67 \"\r杂耍表演\r 第一次这么近距离看杂耍，主力演员自然年龄很小，由于每天持续表演，并没有超高难度的动作，同时表演行云流水，众人拍手叫好。然而散场出现了和电视剧神似的场景，看官们拔脚便走（包括我），同样的场景在打虎李忠再次上演，几百年前是这样，几百年后依然是这样。 在街上闲逛，抬头便看见一个熟悉的身影，手扶钩窗，身子半探，我不知道这条街上有多少人会在她的窗下等着竹竿砸到头上。 武大炊饼店69 \"\r武大炊饼店\r 武大炊饼店也是个人流聚集的地方，除了二楼可以一睹金莲背影，后院更是满足了人们的偷窥欲，美其名曰“非礼勿视”。 潘金莲70 \"\r潘金莲\r 非礼勿视71 \"\r非礼勿视\r 店门口便出现了炊饼摊，模样似酥饼一般，价格不贵，买了两个充饥，咬下去的那一刻我认定，这就是酥饼。武大卖的本是“蒸炊饼”，应该是馒头，或许在这景点摆摊卖馒头不美观吧。 炊饼？酥饼？72 \"\r炊饼？酥饼？\r 东京城相比较为冷清，主打袖珍版皇宫和袖珍版清明上河街。只是没有一个合适的高度和距离来拍全景。 清明上河街东角子门73 \"\r清明上河街东角子门\r 皇宫74 \"\r皇宫\r 水浒城到三国城需要先出再进，买联票的游客都会得到一枚印章作为入城凭证。（干了不好洗） 入城通行证75 \"\r入城通行证\r 三国城少了份水浒城的市井气息，更多的是宏伟的战场和建筑。在三国城看着赤壁战场，听着“我和我的祖国”、“五星红旗”倒是别有一番滋味。 五星红旗在三国飘扬76 \"\r五星红旗在三国飘扬\r 湖边就是赤壁之战场景，东吴与曹营分设在一个凸出的山丘两侧，山丘上是周瑜点将台和七星坛，此处景点紧凑，主题相同。 东吴水寨77 \"\r东吴水寨\r 七星坛78 \"\r七星坛\r 赤壁缩景79 \"\r赤壁缩景\r 从七星坛可以下到山丘侧面的栈道，但是不容易发现，穿过之后便可到达曹营水寨，湖上停放着曹操楼船，此处也是留影胜地。 曹营水寨80 \"\r曹营水寨\r 曹操楼船81 \"\r曹操楼船\r 出曹营后，可以去观看三英战吕布，景点里的表演都是固定时间的，可以规划好游览时间。就是图个热闹，演员骑着快马围着场地一圈一圈地跑，看着更像马术表演。 三英战吕布82 \"\r三英战吕布\r 三英战吕布83 \"\r三英战吕布\r 景区另一侧是一片山坡和竹林，竹林深处便是卧龙岗，孔明的草屋布置的很精致，厨房卧室还有唐老师的蜡像，不少人驻足感慨“诸葛亮很帅”。 卧龙岗84 \"\r卧龙岗\r 诸葛亮85 \"\r诸葛亮\r 外面是甘露寺、凤仪亭、吴王宫，作为赤壁之战的主角，吴王宫俨然成为景区最华丽建筑，还真有皇室风范。 吴王宫86 \"\r吴王宫\r 景点到处都能看到汉服小姐姐，也不管什么地方，哪个朝代，反正穿上就没错。（除了下面这位） 汉服小妹妹87 \"\r汉服小妹妹\r 晚上时间多，先逛南禅古寺网红小吃街，再来太湖广场露天KTV。 南禅寺88 \"\r南禅寺\r 南禅寺89 \"\r南禅寺\r 太湖广场90 \"\r太湖广场\r 太湖大桥91 \"\r太湖大桥\r ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:4:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":"5 最后的半天时间，打发在惠山古镇。 早上匆匆赶去买“鸿运大包”，虽然辨不清正宗与否，但确实大的名不虚传。 鸿运大包92 \"\r鸿运大包\r 乘公交很快可以到老街，老街在惠山脚下，相比商业化的古镇，这里更具古风气息。 惠山古镇图93 \"\r惠山古镇图\r 这里祠堂居多，而且对外开放，满街茶馆，不见西式咖啡，如果淡季来游玩，在幽静的茶馆里坐一坐应该很不错。 祠堂94 \"\r祠堂\r 祠堂95 \"\r祠堂\r 沿河茶座96 \"\r沿河茶座\r 茶楼97 \"\r茶楼\r 如意桥98 \"\r如意桥\r 老街里面就是收费景点，惠山寺和天下第二泉都藏在里面，这次因为时间紧迫，下次绝不放过。 锡惠公园99 \"\r锡惠公园\r 锡惠公园100 \"\r锡惠公园\r 不知哪位粗心者把门半掩着，我得以撞入一个正在进行修缮的宅院，院里空空荡荡，但原始的结构依然吸引人，话不多说，按快门走人。 老宅院101 \"\r老宅院\r 老宅院102 \"\r老宅院\r 老宅院103 \"\r老宅院\r 金锡之行，自此圆满，虽然人潮拥挤，却也能领略大好河山，也是满足的。收拾行装，拖着酸痛的双腿打道回府。 ","date":"2019-10-06","objectID":"/2019-10-06-travels-in-nanjing-and-wuxi/:5:0","tags":["旅行"],"title":"国庆之行：南京-无锡","uri":"/2019-10-06-travels-in-nanjing-and-wuxi/"},{"categories":["生活多美好"],"content":" 我一直认为“摄影”这个词离我很远，但是，我离它似乎很近。 ","date":"2019-08-26","objectID":"/2019-08-26-the-photography-with-me/:0:0","tags":["摄影"],"title":"摄影与我","uri":"/2019-08-26-the-photography-with-me/"},{"categories":["生活多美好"],"content":"1 小时候家里有一部胶片傻瓜机，但在我有限的记忆里，我与它几乎没有多少交集。那是一个胶片开始落寞的年代，便捷简单的数码设备更受人们欢迎。 我对影像开始有意识，是从一部三星DV开始的，现在看来可以说它是我接触摄影的契机。 Samsung VP-D380i01 \"\rSamsung VP-D380i\r 那时小型摄影机还是用磁带来做存储介质，我们每拍完一盒，都会去店里把他转录成视频文件再刻成光盘，然后用那盒磁带进行新一轮拍摄，如此反反复复。 可能对于年少的我来说，那真的只是一个玩的过程，我用它来记录身边的人，也用它来满足自己的好奇和想象。那些影像即使没有什么意义，却永远留在我的记忆深处。 动态的影像总是比静态的更加吸引人，就像现在很多人都喜欢看短视频看电影，而很少去看摄影展。摄影机在人的手里，可以玩出千变万化的效果，这可能也是我最初爱上看电影的原因之一，甚至到现在我在看电影的时候依然会拿出一部分精力来观察画面，那是一种难以言表的兴奋。 ","date":"2019-08-26","objectID":"/2019-08-26-the-photography-with-me/:1:0","tags":["摄影"],"title":"摄影与我","uri":"/2019-08-26-the-photography-with-me/"},{"categories":["生活多美好"],"content":"2 DV光荣退休后，初三那年，因为母亲工作的原因，家中购买了第一台数码相机–索尼Cyber-shot DSC-H10，那也是我第一部真正接触到的相机。 那时我依然没有摄影的概念，只知道它能满足我的一点小小欲望。记得有一段时间，脑子里经常回放的是一些让我印象深刻的电影场景，我就拿着它，像摄影师一样穿行于家里的各个角落，连构图和移位都似电影一样。（正在电脑前的我，想起这些事，忍俊不禁） 2011年10月 吉林乌拉02 \"\r2011年10月 吉林乌拉\r 2011年10月 吉林乌拉05 \"\r2011年10月 吉林乌拉\r 2011年10月 吉林乌拉03 \"\r2011年10月 吉林乌拉\r 2011年10月 吉林乌拉04 \"\r2011年10月 吉林乌拉\r 这台相机现在依然在家中活跃，我也掌握了当年不懂的那些转盘上的模式和参数，但是拿在手里已经没有了当年的那种满足感。 ","date":"2019-08-26","objectID":"/2019-08-26-the-photography-with-me/:2:0","tags":["摄影"],"title":"摄影与我","uri":"/2019-08-26-the-photography-with-me/"},{"categories":["生活多美好"],"content":"3 大众化的数码相机越做越小，手机反而越做越大。最后，手机取代了相机。 高考之后，我得到了我人生中第一部智能手机–小米2s，当年还并不激烈的手机市场中，小米可谓是年轻人的菜，但对我来说，智能机的新鲜感是一方面，更重要的是，我可以随时随地地拍照了。 2013年10月 长春06 \"\r2013年10月 长春\r 2015年1月 吉林07 \"\r2015年1月 吉林\r 2015年9月 长春08 \"\r2015年9月 长春\r 按快门变成了一种快感，一种不用花钱就能感受到的快感。手机中的照片越来越多，也越来越懒得去看，去翻，存满了就把它们扔到硬盘里，像一壶酒被深埋地下，只不过，多少年后它也不会改变。 后来我开始想提升自己的技术，我没有去买多么专业的设备，没钱是我的主要原因。我开始找各种资料，学习iso、光圈、曝光时间之类的东西，我开始迷恋上手动曝光，享受着自己掌握一张照片的效果的成就感，虽然不乏有装x的成分，但我觉得发现了新大陆，沉迷其中无法自拔。 ","date":"2019-08-26","objectID":"/2019-08-26-the-photography-with-me/:3:0","tags":["摄影"],"title":"摄影与我","uri":"/2019-08-26-the-photography-with-me/"},{"categories":["生活多美好"],"content":"4 我一直觉得我是一个怀旧的人，但这怀旧并不是守旧，而是在你厌恶了高度的智能化后，你会想追回那种需要自己动手的乐趣。我说的就是胶片摄影。 我在工作之后接触了胶片，原因可能和很多人一样，被它的色彩所“毒”到。虽然后来才懂得所谓的“真实色彩”不过是扫描仪的一套预设配置，但是胶片摄影的魅力远不止此。 玩胶片的门槛也是它的乐趣所在：想玩转一台全手动的胶片机，需要你有一定的基础，一旦掌握，就如同打开潘多拉魔盒一般；另外，胶片摄影是最需要耐心的，你无法立刻知道你按下快门的一瞬间会出现什么奇妙的效果，它们需要经过药水冲洗的仪式才能完美呈现出来，这也能放慢你拍摄的节奏，更多去思考一些东西。 2019年4月 苏州09 \"\r2019年4月 苏州\r 2019年4月 苏州10 \"\r2019年4月 苏州\r 之后，我逐渐开始喜欢上徒步旅行和早起，一个背包，一部相机，在人们依赖着床和空调的周末，我开始穿梭于城市的各个角落。虽然我不能像那些雄心勃勃的人，动辄上千公里的长途跋涉，但我希望，在生活在一个城市的有限时间里，尽我最大的努力，探索并记录下它的每一面。 2019年6月上海川沙11 \"\r2019年6月上海川沙\r 2019年7月 上海12 \"\r2019年7月 上海\r 2019年7月 上海 通勤地铁13 \"\r2019年7月 上海 通勤地铁\r 现在我的装备很简单，两机两镜，一台单反，一台旁轴，器材从来就不是好作品的充分条件，所以尽量控制自己购买器材的欲望。记录生活就是应该简简单单。 最后放一张全部家当。 ","date":"2019-08-26","objectID":"/2019-08-26-the-photography-with-me/:4:0","tags":["摄影"],"title":"摄影与我","uri":"/2019-08-26-the-photography-with-me/"},{"categories":["饭碗"],"content":"环境 CentOS 7 Python 2.7.5 ","date":"2019-03-01","objectID":"/2019-03-01-letsencrypt/:1:0","tags":["https","web"],"title":"Let's Encrypt证书申请","uri":"/2019-03-01-letsencrypt/"},{"categories":["饭碗"],"content":"安装 直接使用yum安装certbot yum install certbot ","date":"2019-03-01","objectID":"/2019-03-01-letsencrypt/:2:0","tags":["https","web"],"title":"Let's Encrypt证书申请","uri":"/2019-03-01-letsencrypt/"},{"categories":["饭碗"],"content":"申请证书 确保服务器域名与公网IP绑定。 申请过程中需要使用80端口，若占用可以先关闭。 国内DNS可能会获取不到域名信息。（未测试） # 获取证书（邮箱可选填） certbot certonly --standalone -d shootheart.rocks --email liuch1207@sina.com 出现“Congratulations”字样说明证书获取成功，证书存放在/etc/letsencrypt/live/shootheart.rocks/目录下，共有四个文件： cert.pem - Apache服务器端证书 chain.pem - Apache根证书和中继证书 fullchain.pem - Nginx所需要ssl_certificate文件 privkey.pem - 安全证书KEY文件 ","date":"2019-03-01","objectID":"/2019-03-01-letsencrypt/:3:0","tags":["https","web"],"title":"Let's Encrypt证书申请","uri":"/2019-03-01-letsencrypt/"},{"categories":["饭碗"],"content":"将证书添加到Web服务器 编辑/etc/httpd/conf.d/ssl.conf # Apache服务器 vi /etc/httpd/conf.d/ssl.conf # 修改配置 SSLEngine on SSLCertificateFile /etc/letsencrypt/live/shootheart.rocks/cert.pem SSLCertificateKeyFile /etc/letsencrypt/live/shootheart.rocks/privkey.pem 默认免费证书有效期90天，需要在即将到期时手动续期或自动续期才可以继续使用。 # 手动续期，若证书未到期，可以强行续期--force-renew certbot renew # 也可以配合crontab自动续期 ","date":"2019-03-01","objectID":"/2019-03-01-letsencrypt/:4:0","tags":["https","web"],"title":"Let's Encrypt证书申请","uri":"/2019-03-01-letsencrypt/"},{"categories":["饭碗"],"content":"zabbix_server ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:1:0","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix housekeeping housekeeping的作用是删除数据库中的过期数据。 启用housekeeper需要在zabbix_server运行时添加-R housekeeper_execute执行，此选项可以忽略正在进行中的管家程序。（-R为运行时控制选项） 可以在web页面上对housekeeping选项做设置。 运行时控制不支持openbsd和netbsd系统。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:1:1","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix进程用户 Zabbix server 允许使用非 root 用户运行。它将以任何非 root 用户的身份运行。因此，使用非 root 用户运行 server 是没有任何问题的。 如果你试图以“root”身份运行它，它将会切换到一个已经“写死”的“zabbix”用户，可以修改 Zabbix server 配置文件中的“AllowRoot”参数，则可以只以“root”身份运行 Zabbix server。 如果 Zabbix server 和 agent均运行在同一台服务器上，建议使用不同的用户运行 server 和 agent 。否则,，如果两者都以相同的用户运行，Agent 可以访问 Server 的配置文件, 任何 Zabbix 管理员级别的用户都可以很容易地检索到 Server 的信息。例如，数据库密码。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:1:2","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix_agent agent可以进行被动检查和主动检查，取决于监控项的类型“Zabbix agent或Zabbix agent（active）” 32位的zabbix agent可以运行在64位系统上，但在某些情况下可能会失败。 agent的运行时控制只有日志级别的设定，且不支持openbsd，netbsd和windows。 agent在UNIX系统上可以以非root用户运行，如果以root身份运行，它将会切换到zabbix用户，可以在配置文件中修改“AllowRoot”参数来允许以root用户运行。 2.2版本以前，zabbix agent在成功退出时返回0，异常时返回255，2.2及更高的版本，成功退出返回0，异常返回1。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:2:0","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix_proxy proxy可以代表server工作，将从受监控设备采集到的数据缓存在本地，然后传输到所属的server上。 proxy是可选的，有利于分担单个server的负载。如果只有代理采集数据，server的cpu和磁盘I/O的开销可以降低。 proxy无需本地管理员即可集中监控远程位置、分支机构和网络的理想解决方案。 proxy需要使用独立的数据库。支持SQLite、MySQL、PostgreSQL。使用Oracle和DB2可能会有风险，如自动发现规则中的遇到问题返回值。 proxy的运行时控制选项和server相同。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:3:0","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix_sender和zabbix_get server和agnet之间通讯的命令行应用程序，通常用于故障排错或脚本。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:4:0","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"zabbix自动注册 可以使活动的agent自动注册到服务器上，而不需要手动在服务器上进行配置。 当以前未知的active agent要求检查时，会发生自动注册。 active agent支持对被添加的主机进行被动检查的监控，在agent要求检查时，需要提供配置文件中的“ListenIP”或“ListenPort”字段，将参数发给服务器（多个IP发送到第一个）。 agent需要在配置文件中指定“ServerActive”参数。 服务器从agent收到注册请求时，会调用一个动作（Action），事件源自动注册（Auto-Registion）必须配置为agent自动注册。 在web页面上，进入“配置-\u003e动作”，选择事件源为自动注册，然后新建。 定义动作名称，指定“主机元数据”。元数据一般会发送主机名，但为了便于区分主机，可以选择其他信息。主机元数据在agent配置文件中，有两种“HostMetadata”和“HostMetadataItem”。 在“操作”选项卡中，添加“添加主机”，“添加到主机组”，“链接到模板”等。 ","date":"2019-03-01","objectID":"/2019-03-01-zabbix/:5:0","tags":["zabbix","监控"],"title":"Zabbix学习","uri":"/2019-03-01-zabbix/"},{"categories":["饭碗"],"content":"比较两个字符串是否相等 if [ \"$test\"x = \"test\"x ]; then 注意： 使用单个等号 等号两边有空格 注意到\"$test\"x最后的x，这是特意安排的，因为当$test为空的时候，上面的表达式就变成了x = testx，显然是不相等的。而如果没有这个x，表达式就会报错：[: =: unary operator expected 双引号转义\"$\"，单引号不转义，但是对于\"\"转义需要加-e选项 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:1:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"将多行写入文件 cat \u003e\u003e filename \u003c\u003c EOF 输入要写入文件的内容，以EOF为结尾，输入结束 在脚本中，最后EOF需要顶格，否则不被识别 EOF可以换成其他字符，都是可以当作结束符而不显示在文件中 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:2:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"echo文字效果 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:3:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"文字颜色 #字体颜色：30m-37m 黑、红、绿、黄、蓝、紫、青、白 str=\"kimbo zhang\" echo -e \"\\033[30m ${str}\\033[0m\" ## 黑色字体 echo -e \"\\033[31m ${str}\\033[0m\" ## 红色 echo -e \"\\033[32m ${str}\\033[0m\" ## 绿色 echo -e \"\\033[33m ${str}\\033[0m\" ## 黄色 echo -e \"\\033[34m ${str}\\033[0m\" ## 蓝色 echo -e \"\\033[35m ${str}\\033[0m\" ## 紫色 echo -e \"\\033[36m ${str}\\033[0m\" ## 青色 echo -e \"\\033[37m ${str}\\033[0m\" ## 白色 echo必须添加-e选项 颜色字符也是成对出现，包含在要添加文字两侧 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:3:1","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"文字背景颜色 #背景颜色：40-47 黑、红、绿、黄、蓝、紫、青、白 str=\"kimbo zhang\" echo -e \"\\033[41;37m ${str}\\033[0m\" ## 红色背景色，白色字体 echo -e \"\\033[41;33m ${str}\\033[0m\" ## 红底黄字 echo -e \"\\033[1;41;33m ${str}\\033[0m\" ## 红底黄字 高亮加粗显示 echo -e \"\\033[5;41;33m ${str}\\033[0m\" ## 红底黄字 字体闪烁显示 echo -e \"\\033[47;30m ${str}\\033[0m\" ## 白底黑字 echo -e \"\\033[40;37m ${str}\\033[0m\" ## 黑底白字 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:3:2","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"其他效果 \\033[1;m 设置高亮加粗 \\033[4;m 下划线 \\033[5;m 闪烁 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:3:3","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"shell括号 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"单小括号 命令组。括号中的命令将会新开一个子shell顺序执行，所以括号中的变量不能够被脚本余下的部分使用。括号中多个命令之间用分号隔开，最后一个命令可以没有分号，各命令和括号之间不必有空格。 命令替换。等同于cmd，shell扫描一遍命令行，发现了$(cmd)结构，便将$(cmd)中的cmd执行一次，得到其标准输出，再将此输出放到原来命令。有些shell不支持，如tcsh。 用于初始化数组。如：array=(a b c d) ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:1","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"双小括号 整数扩展。这种扩展计算是整数型的计算，不支持浮点型。((exp))结构扩展并计算一个算术表达式的值，如果表达式的结果为0，那么返回的退出状态码为1，或者是\"假\"，而一个非零值的表达式所返回的退出状态码将为0，或者是\"true\"。若是逻辑判断，表达式exp为真则为1,假则为0。 只要括号中的运算符、表达式符合C语言运算规则，都可用在$((exp))中，甚至是三目运算符。作不同进位(如二进制、八进制、十六进制)运算时，输出结果全都自动转化成了十进制。如：echo $((16#5f)) 结果为95 (16进制转十进制)。 单纯用 (( )) 也可重定义变量值，比如 a=5; ((a++)) 可将 $a 重定义为6。 常用于算术运算比较，双括号中的变量可以不使用$符号前缀。括号内支持多个表达式用逗号分开。 只要括号中的表达式符合C语言运算规则,比如可以直接使用for((i=0;i\u003c5;i++)), 如果不使用双括号, 则为for i in seq 0 4`或者for i in {0..4}。再如可以直接使用if (($i\u003c5)), 如果不使用双括号, 则为if [ $i -lt 5 ]。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:2","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"单方括号 bash 的内部命令，[和test是等同的。如果我们不用绝对路径指明，通常我们用的都是bash自带的命令。if/test结构中的左中括号是调用test的命令标识，右中括号是关闭条件判断的。这个命令把它的参数作为比较表达式或者作为文件测试，并且根据比较的结果来返回一个退出状态码。if/test结构中并不是必须右中括号，但是新版的Bash中要求必须这样。 Test和[]中可用的比较运算符只有==和!=，两者都是用于字符串比较的，不可用于整数比较，整数比较只能使用-eq，-gt这种形式。无论是字符串比较还是整数比较都不支持大于号小于号。如果实在想用，对于字符串比较可以使用转义形式，如果比较\"ab\"和\"bc\"：[ ab \\\u003c bc ]，结果为真，也就是返回状态为0。 中的逻辑与和逻辑或使用-a 和-o 表示。 字符范围。用作正则表达式的一部分，描述一个匹配的字符范围。作为test用途的中括号内不能使用正则。 在一个array 结构的上下文中，中括号用来引用数组中每个元素的编号。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:3","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"双方括号 [[是 bash 程序语言的关键字。并不是一个命令，[ ] 结构比 结构更加通用。在[[和]]之间所有的字符都不会发生文件名扩展或者单词分割，但是会发生参数扩展和命令替换。 支持字符串的模式匹配，使用=~操作符时甚至支持shell的正则表达式。字符串比较时可以把右边的作为一个模式，而不仅仅是一个字符串，比如[[ hello == hell? ]]，结果为真。[ ] 中匹配字符串或通配符，不需要引号。 使用[[ … ]]条件判断结构，而不是[ … ]，能够防止脚本中的许多逻辑错误。比如，\u0026\u0026、||、\u003c和\u003e 操作符能够正常存在于[ ]条件判断结构中，但是如果出现在 结构中的话，会报错。比如可以直接使用if [[ $a != 1 \u0026\u0026 $a != 2 ]], 如果不适用双括号, 则为if [ $a -ne 1] \u0026\u0026 [ $a != 2 ]或者if [ $a -ne 1 -a $a != 2 ]。 bash把双中括号中的表达式看作一个单独的元素，并返回一个退出状态码。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:4","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"大括号 大括号拓展。(通配(globbing))将对大括号中的文件名做扩展。在大括号中，不允许有空白，除非这个空白被引用或转义。第一种：对大括号中的以逗号分割的文件列表进行拓展。如touch {a,b}.txt 结果为a.txt b.txt。第二种：对大括号中以点点（..）分割的顺序文件列表起拓展作用，如：touch {a..d}.txt 结果为a.txt b.txt c.txt d.txt 代码块，又被称为内部组，这个结构事实上创建了一个匿名函数 。与小括号中的命令不同，大括号内的命令不会新开一个子shell运行，即脚本余下部分仍可使用括号内变量。括号内的命令间用分号隔开，最后一个也必须有分号。{}的第一个命令和左括号之间必须要有一个空格。 几种特殊的替换结构： ${var:-string}和${var:=string}:若变量var为空，则用在命令行中用string来替换${var:-string}，否则变量var不为空时，则用变量var的值来替换${var:-string}；对于${var:=string}的替换规则和${var:-string}是一样的，所不同之处是${var:=string}若var为空时，用string替换${var:=string}的同时，把string赋给变量var： ${var:=string}很常用的一种用法是，判断某个变量是否赋值，没有的话则给它赋上一个默认值。 ${var:+string}的替换规则和上面的相反，即只有当var不是空的时候才替换成string，若var为空时则不替换或者说是替换成变量 var的值，即空值。(因为变量var此时为空，所以这两种说法是等价的) ${var:?string}替换规则为：若变量var不为空，则用变量var的值来替换${var:?string}；若变量var为空，则把string输出到标准错误中，并从脚本中退出。我们可利用此特性来检查是否设置了变量的值。 在上面这五种替换结构中string不一定是常值的，可用另外一个变量的值或是一种命令的输出。 四种模式匹配替换结构： 第一种模式：${variable%pattern}，这种模式时，shell在variable中查找，看它是否一给的模式pattern结尾，如果是，就从命令行把variable中的内容去掉右边最短的匹配模式 第二种模式： ${variable%%pattern}，这种模式时，shell在variable中查找，看它是否一给的模式pattern结尾，如果是，就从命令行把variable中的内容去掉右边最长的匹配模式 第三种模式：${variable#pattern} 这种模式时，shell在variable中查找，看它是否以给的模式pattern开始，如果是，就从命令行把variable中的内容去掉左边最短的匹配模式 第四种模式： ${variable##pattern} 这种模式时，shell在variable中查找，看它是否一给的模式pattern结尾，如果是，就从命令行把variable中的内容去掉右边最长的匹配模式 # 是去掉左边(在键盘上#在$之左边) % 是去掉右边(在键盘上%在$之右边) #和%中的单一符号是最小匹配，两个相同符号是最大匹配。 这四种模式中都不会改变variable的值，其中，只有在pattern中使用了*匹配符号时，%和%%，#和##才有区别。结构中的pattern支持通配符，*表示零个或多个任意字符，?表示仅与一个任意字符匹配，[…]表示匹配中括号里面的字符，[!…]表示不匹配中括号里面的字符。 字符串提取和替换： 第一种模式：${var:num}，这种模式时，shell在var中提取第num个字符到末尾的所有字符。若num为正数，从左边0处开始；若num为负数，从右边开始提取字串，但必须使用在冒号后面加空格或一个数字或整个num加上括号，如${var:-2}、${var:1-3}或${var:(-2)}。 第二种模式：${var:num1:num2}，num1是位置，num2是长度。表示从$var字符串的第$num1个位置开始提取长度为$num2的子串。不能为负数。 第三种模式：${var/pattern/pattern}表示将var字符串的第一个匹配的pattern替换为另一个pattern。 第四种模式：${var//pattern/pattern}表示将var字符串中的所有能匹配的pattern替换为另一个pattern。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:5","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"符号$后的括号 ${a} 变量a的值, 在不引起歧义的情况下可以省略大括号。 $(cmd) 命令替换，和cmd效果相同，结果为shell命令cmd的输，过某些Shell版本不支持$()形式的命令替换, 如tcsh。 $((expression)) 和exprexpression效果相同, 计算数学表达式exp的数值, 其中exp只要符合C语言的运算规则即可, 甚至三目运算符和逻辑表达式都可以计算。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:4:6","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"变量 local一般用于局部变量声明，多在函数内部使用 shell中定义的变量是全局的，从定义的地方到shell脚本结束或删除的地方为止。 函数定义的变量默认是全局的，作用域从”函数调用时执行变量定义的地方“开始，到shell结束或被删除的地方为止。若函数内变量定义为local，作用域为函数内。函数的参数是local的。 如果同名，函数定义的local变量会屏蔽全局变量。 export将自定义的变量设定为系统环境变量（仅限于本次登陆的当前shell中有效） 参数 -f 代表变量名称为函数名称 -n 删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中。 -p 列出所有的shell赋予程序的环境变量 declare和set类似，可用来声明变量并设置变量的属性（r：只读；x：指定为环境变量；i：值可以是数值，字符串或运算式），也可以用来显示shell函数（-f），不加任何参数，则显示全部shell变量和函数（与执行set效果相同）。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:5:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"shell脚本调试 可以在脚本第一行声明解释器后加参数，也可以执行时加参数调试。 参数 -n：不执行脚本，只查找脚本语法是否有问题，给出错误提示。 -v：执行脚本时，先将脚本的内容输出，然后执行脚本，如果有错误也提示。 -x：将执行的脚本内容及输出显示到屏幕上。 echo也是很有用的调试工具，配合exit语句中断执行。 set命令也可以辅助调试 set -n：读取命令不执行 set -v：显示读取的所有行 set -x：显示所有命令及其参数 提示：通过set -x命令开启调试功能，通过set +x关闭调试功能，可以调试两个命令之间的部分 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:6:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"let计算工具 let是bash中用于计算的工具，用于执行一个或多个表达式，计算变量不需要加$。如果表达式中出现空格或其他特殊字符，必须引起来 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:7:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"shell内部域分隔符IFS IFS(Internal Field Seprator)，内部域分隔符 IFS是一种 set 变量，当 shell 处理\"命令替换\"和\"参数替换\"时，shell 根据 IFS 的值，默认是 space，tab，newline 来拆解读入的变量，然后对特殊字符进行处理，最后重新组合赋值给该变量。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:8:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"特殊变量 $!：后台最近执行命令的PID $?：前台最近命令的结束状态 $$：当前shell的PID $#：传递给脚本的参数数目 $*：以字符串形式输出所有传递给脚本的参数 $@：以$IFS为分隔符列出所有传递到脚本的参数 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:9:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"xargs与普通管道区别 普通管道会把前一个命令的输出当成后一个命令的输入。 echo '--help' | cat # 输出： --help xargs将其接受的内容当作后一个命令的参数来运行后一个命令。 echo '--help' | xargs cat # 输出： Usage: cat [OPTION]... [FILE]... Concatenate FILE(s), or standard input, to standard output. -A, --show-all equivalent to -vET -b, --number-nonblank number nonempty output lines ...... xargs的其他选项： -d 默认情况下xargs将其标准输入中的内容以空白(包括空格、Tab、回车换行等)分割成多个之后当作命令行参数传递给其后面的命令，并运行之，我们可以使用 -d 命令指定分隔符。 -p 使用该选项之后xargs并不会马上执行其后面的命令，而是输出即将要执行的完整的命令(包括命令以及传递给命令的命令行参数)，询问是否执行，输入 y 才继续执行，否则不执行。这种方式可以清楚的看到执行的命令是什么样子，也就是xargs传递给命令的参数是什么。 -n 该选项表示将xargs生成的命令行参数，每次传递几个参数给其后面的命令执行，例如如果xargs从标准输入中读入内容，然后以分隔符分割之后生成的命令行参数有10个，使用-n 3 之后表示一次传递给xargs后面的命令是3个参数，因为一共有10个参数，所以要执行4次，才能将参数用完。 -E ，有的系统的xargs版本可能是-e eof-str 该选项指定一个字符串，当xargs解析出多个命令行参数的时候，如果搜索到-e指定的命令行参数，则只会将-e指定的命令行参数之前的参数(不包括-e指定的这个参数)传递给xargs后面的命令。 注意：-E只有在xargs不指定-d的时候有效，如果指定了-d则不起作用，而不管-d指定的是什么字符，空格也不行。 ","date":"2019-02-26","objectID":"/2019-02-26-shell/:10:0","tags":["shell"],"title":"Shell学习","uri":"/2019-02-26-shell/"},{"categories":["饭碗"],"content":"HTTP和HTTPS 使用HTTP协议会存在一定的安全问题，比如客户端与服务器通信的协议可以很容易被窃取，其中的私密信息会被泄漏，再比如攻击者获取到信息后，可以通过篡改其中的数据来达到攻击目的，而客户端无法对篡改的信息进行校验。 HTTPS协议就解决了这三个问题，HTTPS使用HTTP+SSL，达到加密数据的效果，中间人只能获取到密文，而不能真正知道报文中的内容，通信双方携带证书，证书由第三方签发，很难伪造，数据传输携带摘要，数据无法篡改。 ","date":"2019-01-06","objectID":"/2019-01-06-the-process-of-https/:1:0","tags":["https","安全"],"title":"HTTPS原理","uri":"/2019-01-06-the-process-of-https/"},{"categories":["饭碗"],"content":"CA签发证书 首先，服务方需提供公钥、组织信息或个人信息（域名）等给第三方CA机构进行证书申请。 CA机构会通过线上或线下多种渠道对信息进行验证，确认申请信息合法后，会向申请者签发证书。 证书包含以下信息：申请者公钥、申请者的组织信息和个人信息、签发机构 CA 的信息、有效时间、证书序列号等信息的明文，同时包含一个签名。 签名的产生为先对所有明文信息做散列计算，生成一个信息摘要值，之后CA使用自己的私钥对该摘要值进行加密，密文即CA的数字签名。 数字证书发给服务器，当客户端请求https访问服务器资源时，服务器将该证书发给客户端。 客户端上预装CA的根证书，其中包含CA的公钥，客户端先使用相同的散列算法对证书中的明文信息做散列计算，得到一个摘要值，之后使用CA公钥将证书中的签名解密，得到原本的摘要值，将两个值进行比较，若相同，则信任该证书。 ","date":"2019-01-06","objectID":"/2019-01-06-the-process-of-https/:2:0","tags":["https","安全"],"title":"HTTPS原理","uri":"/2019-01-06-the-process-of-https/"},{"categories":["饭碗"],"content":"前言 由于偶然在群中有人聊起如何抓包https，从而找了一下有什么方法可以实现。 查到Charles这个工具可以实现https的抓包，而且可以查看其中的的数据内容。主要的原理为中间人代理（就是中间人攻击）。 因为https是加密数据的，所以使用正常抓包方法即时可以抓到数据包，也无法像http一样查看其中的内容。 Charles是拦截https的数据包，并使用自己的证书来伪装成服务器的证书发给客户端来完成认证，那么对此就有一个问题，既然中间人可以这么轻易拦截报文并伪装，怎么还能保证https的安全性呢，认为突破点在于对证书的信任验证。 ","date":"2018-12-29","objectID":"/2018-12-29-ca-certificate-and-middleman-attack/:1:0","tags":["安全","https"],"title":"CA证书与中间人攻击","uri":"/2018-12-29-ca-certificate-and-middleman-attack/"},{"categories":["饭碗"],"content":"主机对CA证书的信任 当客户端与服务器使用https进行通信的时候，客户端对发来的ca证书肯定是会进行验证的，如果验证不可信，浏览器就会提醒用户该网站不可信。那么想要达到可信的效果，中间人只有两个办法，一个是强制将自己的证书安装在客户端上，第二个就是要伪造成原服务器的证书。 正常的数字证书中还包括ca机构对该证书的签名（使用ca公钥加密），如果有改动，当浏览器对篡改后的信息进行校验就会不通过，所以如果我们使用第二种方法进行伪造，有一个解决办法就是让证书尽量看起来是ca颁发的，我们可以用我们随机生成的密钥对来做自签发的证书，这样在客户端的浏览器上依然会出现证书不信任的字样，但是当用户查看过证书的内容后，极有可能会选择信任该证书。 对于检查证书严格的情况，此方法也不能成功，所以在一定程度上来讲，https还是比较安全的。 猜测中间人使用合法的CA证书是否可以直接信任，后来发现即使最简单申请的DV证书，也是基于域名申请的，此方法当然行不通。 ","date":"2018-12-29","objectID":"/2018-12-29-ca-certificate-and-middleman-attack/:2:0","tags":["安全","https"],"title":"CA证书与中间人攻击","uri":"/2018-12-29-ca-certificate-and-middleman-attack/"},{"categories":["饭碗"],"content":"对于访问网站获取CA证书与缓存 在此发现一个问题，操作系统安装或浏览器安装的时候，经常会默认安装一些CA机构的根证书，但是对这些机构颁发的具体网站的证书没有导入系统。 我们测试在新安装系统上访问一个https的网站，发现https是正常的，说明证书校验通过，但是检查系统的ca证书库中并没有导入这个网站的证书，在访问的过程中也没有提示需要导入证书。 对于这个问题，解释是，当系统安装了一个CA机构的根证书，对于该证书链下的所有经过CA颁发的证书都会信任，但是并不会在系统中保存这个证书。服务器在每次https握手阶段都会发送证书，为了加快握手的速度，降低资源消耗，有一种说法是缓存的是TLS的会话信息。 来源：腾讯 为了加快建立握手的速度，减少协议带来的性能降低和资源消耗，TLS协议有两类会话缓存机制：会话标识Session ID与会话记录Session Ticket。 Session ID由服务器端支持，协议中的标准字段，因此基本所有服务器都支持，服务器端保存会话ID以及协商的通信信息，Nginx中1M内存约可以保存4000个Session ID机器相关信息，占用服务器资源较多； Session Ticket需要服务器和客户端都支持，属于一个扩展字段，支持范围约60%（无可靠统计与来源），将协商的通信信息加密之后发送给客户端保存，密钥只有服务器知道，占用服务器资源很少。 二者对比，主要是保存协商信息的位置与方式不同，类似于http中的session于cookie。 二者都存在的情况下，优先使用session_ticket（Nginx实现）。 ","date":"2018-12-29","objectID":"/2018-12-29-ca-certificate-and-middleman-attack/:3:0","tags":["安全","https"],"title":"CA证书与中间人攻击","uri":"/2018-12-29-ca-certificate-and-middleman-attack/"},{"categories":["饭碗"],"content":"问题 centos7中没有pts/0和pts/3？ ","date":"2018-12-29","objectID":"/2018-12-29-tty-and-pts-of-linux/:0:1","tags":["linux"],"title":"Linux系统中的tty与pts","uri":"/2018-12-29-tty-and-pts-of-linux/"},{"categories":["饭碗"],"content":"tty、pty与pts的概念 tty（终端设备的统称） tty源于Teletypes，原指电传打字机，现在指终端比较合适（应该是属于终端设备） pty（虚拟终端） 当使用远程到主机的时候，就需要用到虚拟终端 pts/ptmx（pts/ptmx结合使用，进而实现pty） pts（pseudo-terminal slave）是pty的实现方法，和ptmx（pesude-terminal master）配合使用实现pty ","date":"2018-12-29","objectID":"/2018-12-29-tty-and-pts-of-linux/:0:2","tags":["linux"],"title":"Linux系统中的tty与pts","uri":"/2018-12-29-tty-and-pts-of-linux/"},{"categories":["饭碗"],"content":" 从virtualbox打包来的ova格式镜像，发现无法在kvm上直接使用，会提示镜像无法引导，因为kvm使用的虚拟磁盘格式多数都是qcow2的，所以应该可以将ova转成该格式。 其实ova格式是使用tarball打包的，用file命令就可以验证。 ~ $ file Evergreen_trunk_Squeeze.ova Evergreen_trunk_Squeeze.ova: POSIX tar archive (GNU) 所以直接解压文件就可以，解压后一般会得到一个原来的磁盘格式和一个ovf文件，qemu自带工具就可以转换格式。 ~ $ qemu-img convert -O qcow2 Evergreen_trunk_Squeeze-disk1.vmdk Evergreen_trunk_Squeeze.qcow2 ","date":"2018-11-27","objectID":"/2018-11-27-import-a-kvm-image-using-ova/:0:0","tags":["kvm","虚拟化"],"title":"kvm使用ova导入虚拟机镜像","uri":"/2018-11-27-import-a-kvm-image-using-ova/"},{"categories":["饭碗"],"content":"802.1X过程 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:1:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"协议 客户端PAE和设备端PAE之间，EAP协议使用EAPoL格式封装，直接承载于LAN环境中。 设备端PAE和Radius服务器之间，EAP可以用EAPoR封装，承载于Radius协议中（中继方式）；也可以由设备端PAE终结，在设备端PAE和Radius服务器之间使用PAP或CHAP协议（终结方式）。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:1:1","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"认证过程 客户端初始化，可以由客户端或交换机发起，若交换机端口设置了802.1x，在端口重启时，交换机开始建立认证会话（交换机使用组播报文触发）。也可以由客户端发起认证会话（交换机收到MAC地址若不在802.1x会话维护的MAC地址列表中，交换机将发送单播报文触发认证，一般在multi-auth模式下）。 还有dhcp发送EAP-Start报文触发，Winxp自带802.1x客户端就是用dhcp触发。 客户端会收到请求帧（EAP-Request/Identify）要求用户的客户端程序发送用户名。 客户端发送用户名给交换机，交换机将数据帧经过封包处理后发送给Radius服务器。 Radius服务器收到用户名信息，与数据库中的用户名表相对比，找到该用户名对应的口令，用一个随机生成的加密字段对他进行加密，同时加密字段也发送给交换机（Access-Challenge报文），交换机再转发给客户端。 客户端程序收到加密字段，用该加密字段对口令进行加密，发送给交换机再由交换机发送给Radius服务器。 Radius服务器将两个加密过的信息比对，若正确，则交换机改变端口授权，允许用户接入网络。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:1:2","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"注意 若终端被判断为无客户端，则交换机检查端口是否配置了MAB（MAC Authentication Bypassa）。 若启用重认证，在认证到期后会重新开始认证。 802.1x的端口在获得授权后，端口的状态就不会再受客户端和Radius的影响，除非出现： 重认证计时器过期 终端发送EAPOL logoff终止802.1x会话 端口重启 握手失败 华为/H3C交换机在端口改为授权状态后，会定期发送握手包给客户端，以便对客户端的在线状况进行监视。缺省情况下，两次握手包没有回应就会让客户端下线，但这个功能只有华为/H3C交换机并安装他们自己的客户端才支持。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:1:3","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"端口授权与非授权状态 认证未通过时，端口状态为unauthorized状态，端口不允许cdp、spanning tree、EAPOL外的所有流量通过。 认证通过后，端口状态变为authorized，所有协议都允许通过。 端口状态命令：dot1x port-control force-authorized|force-unauthorized|auto ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:2:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"定时器 握手定时器（handshake-period）（Cisco没有） 静默定时器（quiet-period） 重认证定时器（reauth-period） Radius服务器超时定时器（server-timeout） 客户端认证超时定时器（supp-timeout）（有802.1x客户端的情况） 定时器决定了各组件之间报文的重传间隔，在一些环境下，定时器对802.1x的认证结果和终端上应用协议的使用会产生根本性影响。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:3:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"PAE（Port Access Entity，端口访问实体） PAE是认证机制中负责执行算法和协议操作的实体，也就是设备端和客户端都要有PAE才能进行认证。 设备端PAE负责对用户进行认证，并根据结果对端口授权状态进行控制。 客户端PAE负责响应设备端的认证请求，向设备提交用户的认证信息，也可以主动向设备端发送认证请求和下线请求。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:4:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"受控与非受控端口 逻辑概念，客户端接入的端口被划分为两个逻辑端口，任何到达该端口的帧，在受控与非受控端口上均可见。 非受控端口始终处于双向连通状态，主要用来传递EAPoL协议帧，保证客户端始终能收发认证报文。（只允许EAPoL、CDP、Spanning-Tree协议通过） 受控端口只在授权状态下处于双向连通，用于传递业务报文，在非授权状态下禁止收发任何报文。 在非授权状态下，受控端口可以被设置成单项受控和双向受控： 单项受控，禁止从客户端接受帧，但允许向客户端发送帧。 双向受控，禁止帧发送和接收。 端口受控方式：基于端口的认证和基于MAC地址的认证。 基于端口的认证：只要该物理端口下第一个用户认证成功后，其他接入的用户无需认证就可以访问网络资源。但当第一个用户下线后，其他用户也无法接入网路。 基于MAC认证：端口下所有的接入用户均需要单独认证。（这里的用户应理解为主机？） ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:5:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["饭碗"],"content":"MAB MAB是MAC-authentication-bypass的缩写 适用于未安装802.1x客户端的情况下，通过主机的MAC地址进行认证。 比如打印机可以用MAB接入到启用了802.1x的交换机端口上。 在终端的EAPOL Response达到指定次数和时间未送到交换机时，就会启用MAB。 交换机抓取终端的以太报文，提取MAC地址作为认证ID，Radius数据库中存放了可授权MAB的地址列表。 ","date":"2018-11-19","objectID":"/2018-11-19-802.1x/:6:0","tags":["802.1X"],"title":"802.1X学习","uri":"/2018-11-19-802.1x/"},{"categories":["涉读电影"],"content":"起因 前天去看了期待已久的电影的点映，对于我这种经常独自去影院看电影的人来说，已经不会再感觉到一个人坐在座位上的尴尬了。但是在观影过程中，依然会有尴尬的事情发 生，而且是我替别人感到尴尬的事。 看电影的人大都聚集在周末，有时候再没什么比和亲朋一起看个电影更开心的事了。在影院里人们总是成群结队的来，又成群结队的走，家长带着小孩子更是常事，基本上 各个放映厅能看到这么一家子。小孩子确实活泼可爱，但是电影院和其他地方可不一样，像商场公园什么的，人多嘈杂，小孩子再怎么疯再怎么闹，其他人也只是一笑而过， 可在这你试试，有时说句话都会遭斥责，何况那么多人都安静的看电影，你怎么好意思打扰别人。 那天的情况，电影开场的时候，放映机的灯光下我看到了四个人的影子–小两口带着两孩子，他们在我的前一排坐下了，当时确实有点担心，因为这电影并不适合小孩子看， 会不会中间因为无聊或其他的因素而打扰到别人，后来也确实发生了，小孩子滔滔不绝地说着，而且并不会自己去控制说话的音量，结果更前面的一个哥们忍不住了，说了一 句，话比较客气但情绪很气愤，家长倒也知道是自己不对，不去反驳，去哄孩子让他小点声，我看着这放映厅里的另一出戏，还真替那父母感到尴尬。这事情虽小，但对于专 心看电影的我们来说确实是会影响心情的，这是谁都不希望的。 ","date":"2018-07-02","objectID":"/2018-07-02-the-viewpoint-about-kids-in-cinema/:1:0","tags":["电影"],"title":"带小孩子进电影院看电影的正确方式","uri":"/2018-07-02-the-viewpoint-about-kids-in-cinema/"},{"categories":["涉读电影"],"content":"分析 要说以前去看电影，也经常碰到带小孩的家长，不过看那种合家欢式的电影的话，影厅里气氛比较活跃，也就少有人在乎小孩子吵了，就怕看严肃的电影的时候有小孩子突然 冒出一句话来，马上就出戏了，对于影迷来说心里有多烦闷想想都知道。 虽然这种事并不会引起多么大的后果，但是我们每个人都不想在全神贯注看电影的时候突然被别人说话打断一下（至少我是这样的）。而且对于带小孩的家长来说，影响了别 人，自己尴尬不说，哄孩子的功夫都不能好好看电影了，本来花钱是求享受的，最后也闹得不开心，又是何苦呢。 不过回过头来想想，这种事也不能全怨家长，本来周末就是全家出去玩的黄金时间，突然来兴致了一起去看个电影，也不能把孩子扔下。但是家长这之前确实应该有所考虑， 不是什么电影都可以让孩子看的，在决定看什么电影之前，我觉得还是要花点时间去了解一下这部电影，而且现在的电影多数质量不怎么样，宣传倒是下了不少功夫，海报、 预告片什么的做的非常吸引人，可能家长只是看了这些表面的东西，就决定了是否带孩子去看，结果看着看着出现了一个少儿不宜的东西，或者家长看的津津有味，孩子觉得 无聊，一会儿说句话，一会乱走几步，打扰了别人，家长还得来管，这确实都是不必要的麻烦。 我国现阶段的电影放映制度是没有明确分级的，即使有少数电影公司考虑到了电影的内容实在太不适合低年龄段，会自行在海报上打出不宜字样，但这毕竟是少数，多数公司 为了电影的利益还是不会做说明的，就像前不久的《红海行动》，宣传的是爱国主义，其实拍的是残酷的战争，充斥着血腥，这种电影虽然有一定的爱国教育意义，但是里面 有些场景男生都会不适，你让小孩和女生（大多数）看这种电影，未免就要挨骂了。 ","date":"2018-07-02","objectID":"/2018-07-02-the-viewpoint-about-kids-in-cinema/:2:0","tags":["电影"],"title":"带小孩子进电影院看电影的正确方式","uri":"/2018-07-02-the-viewpoint-about-kids-in-cinema/"},{"categories":["涉读电影"],"content":"总结 所以在官方机构不能给家长一个观影指导的情况下，肯定就要家长自己去了解了，毕竟父母才是孩子最好的老师，电影分级制度里不是也有一个“在家长的指导下观看”吗，这 是其一，其二，在平时的时候家长也应该多指导孩子不应在一些场合下大声喧哗，知道哪些地方需要安静，即使说话也不要影响别人。这些自律的行为有时候并不是自然形成 的，还是需要正确的指导与教育。 本人只是以一个影迷的角度来看这件事，写这篇短文只是把我看到的我想到的记录下来，仅此而已。 ","date":"2018-07-02","objectID":"/2018-07-02-the-viewpoint-about-kids-in-cinema/:3:0","tags":["电影"],"title":"带小孩子进电影院看电影的正确方式","uri":"/2018-07-02-the-viewpoint-about-kids-in-cinema/"},{"categories":["饭碗"],"content":"学习Linux运维的过程中，对于一些常见的服务的搭建是必不可少的，FTP是我们经常使用的文件传输协议，在Linux上我们用vsftpd来搭建FTP服务器。 ","date":"2018-02-25","objectID":"/2018-02-25-learning-vsftpd/:0:0","tags":["ftp","linux"],"title":"vsftpd学习","uri":"/2018-02-25-learning-vsftpd/"},{"categories":["饭碗"],"content":"安装 安装自然不必多说，在RHEL上使用yum可以轻松安装该软件。 为了测试过程中不会因为防火墙阻挡而影响结果，可以先清空防火墙的规则。 在vsftpd的配置文件里已经有了大多数的常见配置，并对相关语句做了注释，因此对于平常使用来说可以很容易的实现。 下面我们尝试用匿名登录FTP服务器。 ","date":"2018-02-25","objectID":"/2018-02-25-learning-vsftpd/:1:0","tags":["ftp","linux"],"title":"vsftpd学习","uri":"/2018-02-25-learning-vsftpd/"},{"categories":["饭碗"],"content":"登录 需要修改的配置有以下几条： 1 anonymous_enable=YES 2 anon_umask=022 3 anon_upload_enable=YES 4 anon_mkdir_write_enable=YES 5 anon_other_write_enable=YES 注意：每次修改完配置后都需要重启vsftpd服务才能生效。 配置保存，重启服务后，可以在本机上使用ftp登录（配置中的local_enable表示是否允许本机登录），在输入用户名的时候选择anonymous，密码为空。 此时可以登录成功，但是无法创建目录，原因为匿名登录的默认目录为/var/ftp/，通过查看目录我们可以发现，该目录的所有者和群组都是root，而我们需要将所有者改为 ftp才能有该目录的写权限，所以使用chown修改目录所有者。 此时再使用ftp尝试匿名登录，发现报错： 500 OOPS: vsftpd: refusing to run with writable root inside chroot() Login failed. 421 Service not available, remote server has closed connection ","date":"2018-02-25","objectID":"/2018-02-25-learning-vsftpd/:2:0","tags":["ftp","linux"],"title":"vsftpd学习","uri":"/2018-02-25-learning-vsftpd/"},{"categories":["饭碗"],"content":"分析报错并解决 对于此报错，是chroot的策略导致的，在配置文件的注释中也有讲解： You may specify an explicit list of local users to chroot() to their home directory. If chroot_local_user is YES, then this list becomes a list of users to NOT chroot(). (Warning! chroot’ing can be very dangerous. If using chroot, make sure that the user does not have write access to the top level directory within the chroot) FTP中有chroot功能，意思是在用不同的用户登录的时候访问目录将限制在该用户的家目录中，也就是除了用户的家目录不能访问其他目录，但是使用该功能的前提是用户 不能对自己的家目录有写权限，这也是上面报错的原因（/var/ftp的权限为755）。 因此，只要将/var/ftp的权限改为555或将该目录的所有者改为root，之后在二级目录中操作文件的增删改查就可以了。 对于anonymous来说，任何情况下都开启chroot。 ","date":"2018-02-25","objectID":"/2018-02-25-learning-vsftpd/:3:0","tags":["ftp","linux"],"title":"vsftpd学习","uri":"/2018-02-25-learning-vsftpd/"},{"categories":["饭碗"],"content":"chroot的探索 chroot功能可以使用chroot_local_user语句来开启或关闭（针对所有有权限登录的本地用户），除此之外，也可以在关闭的状态下使用chroot_list_enable来选择为哪些用 开启。 正如配置说明中所说，当chroot为关闭状态下，设置list可以实现为用户单独开启chroot，而在chroot开启的状态下，设置list就变成了为用户单独取消chroot。 虽然软件在这方面做了严格限定，但是要取消家目录的写权限实在是不方便，所以配置中还给出了一条语句allow_writeable_chroot，将其设置为YES，就可以在用户对 其家目录保留写权限的情况下使用chroot。 ","date":"2018-02-25","objectID":"/2018-02-25-learning-vsftpd/:4:0","tags":["ftp","linux"],"title":"vsftpd学习","uri":"/2018-02-25-learning-vsftpd/"},{"categories":["涉读电影"],"content":"起因 前一阵突然想起这个问题，具体原因忘了，不过对于电影院的这一做法，我还是深有体会的：每次只要一放到片尾，立马就开灯，一秒钟都不耽误，而观众也是习惯性的都起身准备走，就算有几位还坐在座位上，也待不过一分钟，然后就很简单了，直接关掉放映，管理人员开始清场。 最近印象比较深的还是一次去看《战狼2》，因为片尾字幕过后还有一段彩蛋，里面包含了未完待续的内容，结果因为影院没有放完就没看到。 ","date":"2018-01-14","objectID":"/2018-01-14-film-cast-list/:1:0","tags":["电影"],"title":"为电影夺回片尾","uri":"/2018-01-14-film-cast-list/"},{"categories":["涉读电影"],"content":"感受 这肯定不是最近几年才出现的状况，甚至在我的记忆中，小学学校组织看电影的时候貌似就是这样了，所以至少十几年前影院就有了这个“传统”。如果说这是如今快节奏生活导致的，那么当年的电影市场还没有像现在这样膨胀，没有那么多的快餐电影，出现这种问题也是不应该的。 这个问题的根源肯定也不好说了，不过可以肯定的一点是，现在去问影院这么做的动机，他们肯定会扔给你一句“别的影院都这么做，我也这么做呗”。现在电影几乎完全沦为人们娱乐的消费品了，观众看电影也很少是为了”电影“，更多的是为了”看“，甚至看都是次要的，约妹子才是正事。观众的观影要求越來越低，所以像有看完片尾这种常人看来是”强迫症”行为的观众，影院才不会去照顾你呢。 相信这个问题也不是没有人去反映，但是人家是照顾绝大多数人的喜好，就算你去说效果也是微乎其微。这种做法不仅是不考虑影迷的感受，而且还是一种欺骗消费者的行为，因为我们买一张电影票的价值是一整部电影的时长，我们自然有权看完一整部时间的电影，不能因为多数人不看就不去放完那五分钟的片尾。不过现在这种说法貌似也失去了说服力，因为最近几年很多影院开始让观众提前入场，而且在正式放映之前加入了近五分钟的广告，这样就算拿时长来说事，人家也有自己的说法。当然，这只是根据我观察到的现象做的一种猜测。 ","date":"2018-01-14","objectID":"/2018-01-14-film-cast-list/:2:0","tags":["电影"],"title":"为电影夺回片尾","uri":"/2018-01-14-film-cast-list/"},{"categories":["涉读电影"],"content":"我的经历 电影的片尾的确没有什么信息量，但是维护一部电影作品的完整是我们每一个观众都应该做的，片尾也是电影的一部分，片尾字幕的每一个名字都应该被列出来，因为他们都为了这部作品做出了贡献。我个人还是尽量去看完每一部电影的片尾，即使是英文或其他外语的电影，在看不懂字幕的情况下，我也是把片尾音乐听完才离开。 说到这种“强迫症”，也是不知不觉中养成的。我最开始“关注”电影应该是在2007年的《集结号》，当时比较小，这种拍摄手法看得眼花缭乱，不过印象很深，当时也刚接触互联网，就看了下电影的演职员，之后看电影也是这样。还有印象比较深的是2009年的《南京！南京！》，看完这么沉重的一部电影，在结尾字幕出现“陆川导演作品”的时候，我突然有了一种肃然起敬的感觉，突然觉得创作者对于一部作品来讲是这么重要，而且是每一个人都这么重要。也是从那之后，我对电影的演职员表有了很大的兴趣，几乎每一部电影都会看，有时候看到了熟悉的名字就有一种莫名的兴奋：“哦，居然是他（她）”。 人们太多只是看到演员们演出来的电影，却忘了幕后那么多人的付出，都是不容易的。 ","date":"2018-01-14","objectID":"/2018-01-14-film-cast-list/:3:0","tags":["电影"],"title":"为电影夺回片尾","uri":"/2018-01-14-film-cast-list/"},{"categories":["涉读电影"],"content":"总结 电影本身是艺术作品，即使变成了消费品，它的本质也不应该被改变，更不应该被破坏。所以，不管你是不是影迷，请尊重一部电影。 ","date":"2018-01-14","objectID":"/2018-01-14-film-cast-list/:4:0","tags":["电影"],"title":"为电影夺回片尾","uri":"/2018-01-14-film-cast-list/"},{"categories":["生活多美好"],"content":" HTPC（Home Theater Personal Computer），即家庭影院电脑。 是以计算机担当信号源和控制的家庭影院，也就是一部预装了各种多媒体解码播放软件，可用来对应播放各种影音媒体，并具有各种接口，可与多种显示设备如电视机、投影机、等离子显示器、音频解码器、音频放大器等音频数字设备连接使用的个人电脑。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:0:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"之前使用树莓派的方案与局限性 之前因为手头有闲置树莓派所以暂时将其作为pt下载机，并由此做出搭建家用HTPC的临时方案。 临时方案很简单，树莓派主要任务为pt下载，之后连接带电源的硬盘盒作为文件存储服务器，电视通过内网连接并读取文件或播放视频。 由此可见该方案的局限性： 树莓派功耗较低，但是通过usb无法带起大硬盘正常工作，需要硬盘独立供电。 树莓派自身cpu与内存空间有限，在后台运行大量进程后资源吃紧。 由于剩余资源较少，无法再额外提供高清视频解码功能。 树莓派无法解码视频，电视只能通过内网传输并自身解码播放视频，因此很受网络速率与自身解码器性能的影响（树莓派不支持h265高清视频）。 因此，当使用需求增多后，该临时方案将不能满足。需搭建性能强，耗电少，可扩展性高的HTPC主机。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:1:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"需求 支持各种常见媒体格式的解码播放，支持h265硬解码，甚至4K视频播放。 有足够空间安装3.5寸台式机大硬盘，可以存储大量文件并通过局域网共享。 主机需直接通过HDMI线连接到客厅电视，以避免局域网速率限制视频流传输。 要求操作界面简洁方便，容易上手。 可以保证长期稳定运行而且耗电量低。 支持bt下载与迅雷下载。 支持内外网环境下远程管理。 主机体积足够小，可以随意放置。 可选：游戏需求，可以流畅运行一些非大型游戏。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:2:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"方案设计 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:3:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"硬件方面 对于如今家用HTPC的搭建方案，已经有很多比较完善的例子，不过还是要根据自身需求来选择硬件。 主板及处理器 华擎科技 J3455-ITX：539RMB 在现有的例子中，intel推出的新一代赛扬处理器是最为用户津津乐道的，因为他具备了低功耗与高性能的特点，其自带的核心显卡可以完美硬解h265甚至4K视频，无疑是现阶段最好的选择。有数家主板厂商推出了集成该处理器的ITX迷你主板，接口功能齐全，价格也适中。 内存 金士顿KVR16LS11/4 KST 4G DDR3 1600L（二手）：145RMB 华擎科技的官方网站上提供了J3455-ITX主板所支持的内存型号（有很多网友吐槽其内存兼容性，其实并不是主板兼容问题，而是处理器的问题），所以在考虑到现今内存条价格疯涨的特殊情况，决定使用二手内存条，可以节省近50元。 硬盘 士必得 M3-32G固态硬盘（附带数据线与台式机托架）：106RMB SSD固态硬盘，用来做系统盘，既然需求不高也无需买高端产品，满足日常使用即可。 机箱 祐泽海洋之星+标配1U电源250W：135RMB 在所有物品中，机箱是找的时间最长的，因为个人原因，第一不喜欢机箱体积过小导致使用DC外置电源，第二不喜欢体积过大像一般台式机一样的，第三考虑到预算决定将机箱价格控制在200以内，所以放弃了之前最中意的乔思伯品牌（个人认为乔思伯的外观是最好的，大小也可以接受，只是价格偏高）。最后决定用海洋之星，这机箱应该是价格最便宜的了，由于体积原因只能使用服务器1U电源，不过还好内部空间足够大，还特意向卖家请教了一些空间利用的方法。 硬件预算总计（不包括其他配件）：930RMB ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:3:1","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"软件方面 硬件的性能固然重要，但是用户体验更重要，因此软件方面必须做到界面友好，操作简单，尽量让用户体验做到最好。 操作系统 Lubuntu 16.04LTS 操作系统第一个不会考虑windows，虽然在软件兼容性和用户界面上win比较好，但是会带来高占用资源和各种垃圾软件病毒的问题，所以还是选择用基于Linux的系统，也方便远程控制。Ubuntu是再熟悉不过的系统了，使用LXDE轻量级桌面在资源占用上会更低。 主板说明书上只标明Linux操作系统支持Ubuntu 16.10，之后要具体测试一下。 2017-11-12更新：事实证明，Ubuntu近期的版本（目前只试过LXDE和Unity桌面），在安装上之后无法通过HDMI接口输出声音，各种软件设置均无效，这种情况同样发生在Debian（Xfce桌面）系统上。目前Windows10和Fedora（Gnome桌面）测试无问题（或为桌面环境导致），而且在Windows10环境下资源占用较高，因此暂时使用Fedora系统，有待进一步观察是否出现问题。 2017-11-26更新：上述问题已排查，因为之前测试Kodi环境下插移动硬盘不能自动挂载（需要添加自动挂载策略），所以为了方便就在fstab文件中添加了开机自动挂载移动硬盘的条目，但是如果开机检查该文件发现硬盘没有连接，将无法正常启动系统，也就是上述问题的所在，所以删除该条目就可以解决。 媒体中心 Kodi v17.5 “Krypton” 作为一款开源媒体中心项目，可以说Kodi已经集成了所有你可能想到的功能，支持所有平台，而且提供了强大的可扩展的插件库，可以自己制作也可以使用他人制作的插件来实现各种功能。而且对媒体格式的支持也是很完美，支持媒体信息搜刮器，个人觉得是搭建个人媒体库的不二选择。 由于Kodi基于Ubuntu的KODIbuntu系统貌似已经停止更新，所以选择以软件形式安装。 虽然Kodi的插件功能很强，但是中文插件资源依然很少，其中一方面原因也是因为源网站对其的封堵，导致很多插件已经失效并停止更新。 其他软件 基础操作系统为Linux，所以在这里使用SSH进行远程操作，Samba服务负责局域网文件共享，n2n负责内网穿透方便外网远程控制，Deluge进程负责pt下载。 如果有需求，可以使用虚拟机安装windows，方便使用迅雷下载或其他需要win平台的软件。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:3:2","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"方案实施 方案已经确定，理论上没有太多问题，但是在实施的过程中，会因为各种因素导致过程不顺利，因此在实施的过程中将会有许多问题待解决。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:4:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"硬件方面 硬件方面无太多变动，安装过程也没有太多阻碍，只是机箱的空间与预计较为不同，原本计划在其他硬件安装完毕之后还可以在机箱侧壁以两颗螺丝固定一块3.5寸大硬盘，但实际测量发现cpu散热片超过预想的高度，导致剩余空间可能不足以放下一块大硬盘。 对于固态硬盘的安放也与预期相差较多，机箱顶盖有固定固态硬盘的位置，但是考虑到过后还要在那个地方安放其他硬盘所以决定将其放入电源下面的空间里，然而固态硬盘配套的螺丝根本不符合其自身螺丝孔，而且机箱侧面的圆形散热孔不能完美对上硬盘侧面的两个螺丝孔，所以只能更换其他螺丝并且使其中一颗螺丝斜着拧入。 机箱散热风扇由于没有测量顶盖的风扇位置大小而错买了，尝试过用双面胶粘贴，但发现使用一段时间会掉，所以只能用一颗螺丝固定在顶盖上，还好效果没有那么差。 其他硬件并没有发现兼容问题，一次性点亮，只是连接我的便携式显示器的时候必须用一根充电线把显示器和机箱连接起来才不会有问题，使用外接电源就是不亮，有可能与机箱漏电有关，希望接到电视上不会出现此问题。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:4:1","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"软件方面 实施过程最让人头疼的就是软件问题，对于Linux系统来说，兼容问题远比Windows系统多的多（尤其对这种较新的硬件，主板说明书上也标明推荐Windows10）。 首先是按照原方案中提到的Ubuntu（LXDE桌面），安装上后并没有发现有其他问题，但是在kodi安装上之后测试才发现HDMI无法输出声音，在网上也有很多教程解决此问题，但是均不起作用。其一，教程中大多是对于Ubuntu原版系统，会导致桌面环境影响；其二，很有可能是因为操作系统对该硬件存在兼容问题。 2017-11-26更新：对于HDMI声音输出问题，目前决定暂时放弃。 之后在尝试过其他版本的Lubuntu后决定暂时放弃该系统，同时也断定是系统的问题，那么就按照主板说明书上提到的Fedora 25系统来测试，没想到这个系统就没有声音输出的问题了，而且其使用的Wayland显示服务器比传统的X服务器更顺畅，只不过相对资源占用较大（但还是甩win10几条街）。 Fedora系统安装Kodi与Debian系的完全不一样，不过Fedora使用的源包含的组件更加全面，不需额外下载其他组建。安装完Kodi之后在登录桌面环境中都有一个单独的Kodi环境，也就是不需依赖其他桌面环境运行，相对更省资源。 不过Fedora系统之后也出现了问题，在一次测试中播放视频突然黑屏，显示器忽亮忽暗，而且只要退出Kodi全屏播放模式就恢复了（此问题是在单独Kodi环境下，也就是standalone环境下发生的），之后尝试过更改显示屏刷新率但是没有效果，不过发现只要将输出模式改为1920X1080i就恢复正常了。还要说明一点，在Gnome环境下运行Kodi不会出现此问题。 期间也尝试过Debian（Xfce桌面），Ubuntu16.04，Windows10。Debian就和Ubuntu一样了，都存在没有声音的问题，不过不得不说win10是问题最少的，但是使用win10的话就面临三个问题：未必永久激活，资源占用大，远程控制困难。所以现在还是选择拯救者Fedora。 2017-11-26更新：系统方面最终决定使用Ubuntu。 对于Kodi的设置就没有过多想说的了，怎么使用舒服简单就怎么设置，而且Kodi使用手机遥控还是很好用的，感觉真的是开箱即用。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:4:2","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"},{"categories":["生活多美好"],"content":"总结 个人来说算是第一次完整装机，从查阅资料到选择配置再到组装和系统调试，大概断断续续花费了一个多月的时间。有时候对于方案的设计还是存在很多欠考虑的地方，比如这次机箱空间的计算，还有系统方面的各种问题。。也可能因为这次装机用途比较特殊，毕竟不是主流电脑配置，所以有很多地方无法找到有用的资料，而且也预计不到结果如何，导致过程中会出现种种问题，不得不说弄起来真的很累。。 不过有些时候学习就是一些事情逼出来的，装机过程还是可以学到很多东西的，还要注意很多细节。装机也是门手艺，弄好了也是很了不起的哦~ 估计接下来我又要折腾一台迷你主机了，真的会上瘾的。。 ","date":"2017-11-03","objectID":"/2017-11-03-design-of-htpcv1.0/:5:0","tags":["媒体中心"],"title":"家用HTPC方案v1.0","uri":"/2017-11-03-design-of-htpcv1.0/"}]